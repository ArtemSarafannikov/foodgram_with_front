version: '3.8'

services:
  api:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: foodgram_api
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - foodgram
    restart: unless-stopped

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: foodgram_frontend
    ports:
      - "3000:3000"
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - api
    networks:
      - foodgram
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: foodgram_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: foodgram
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - foodgram
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d foodgram" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:

networks:
  foodgram:
    driver: bridge